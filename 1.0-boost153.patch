--- origsrc/monotone-1.0/src/database.cc	2011-03-26 01:40:58.000000000 -0500
+++ src/monotone-1.0/src/database.cc	2013-05-14 03:20:10.076431300 -0500
@@ -92,7 +92,7 @@ using std::vector;
 using std::accumulate;
 
 using boost::shared_ptr;
-using boost::shared_dynamic_cast;
+using boost::dynamic_pointer_cast;
 using boost::lexical_cast;
 using boost::get;
 using boost::tuple;
@@ -3431,7 +3431,7 @@ database::encrypt_rsa(key_id const & pub
 
   shared_ptr<X509_PublicKey> x509_key(Botan::X509::load_key(pub_block));
   shared_ptr<RSA_PublicKey> pub_key
-    = shared_dynamic_cast<RSA_PublicKey>(x509_key);
+    = dynamic_pointer_cast<RSA_PublicKey>(x509_key);
   if (!pub_key)
     throw recoverable_failure(origin::system,
                               "Failed to get RSA encrypting key");
@@ -3483,7 +3483,7 @@ database::check_signature(key_id const &
       L(FL("building verifier for %d-byte pub key") % pub_block.size());
       shared_ptr<X509_PublicKey> x509_key(Botan::X509::load_key(pub_block));
       shared_ptr<RSA_PublicKey> pub_key
-        = boost::shared_dynamic_cast<RSA_PublicKey>(x509_key);
+        = boost::dynamic_pointer_cast<RSA_PublicKey>(x509_key);
 
       E(pub_key, id.inner().made_from,
         F("Failed to get RSA verifying key for %s") % id);
--- origsrc/monotone-1.0/src/key_store.cc	2011-03-26 01:40:59.000000000 -0500
+++ src/monotone-1.0/src/key_store.cc	2013-05-14 03:20:10.038429100 -0500
@@ -43,7 +43,7 @@ using std::vector;
 
 using boost::scoped_ptr;
 using boost::shared_ptr;
-using boost::shared_dynamic_cast;
+using boost::dynamic_pointer_cast;
 
 using Botan::RSA_PrivateKey;
 using Botan::RSA_PublicKey;
@@ -628,7 +628,7 @@ key_store_state::decrypt_private_key(key
   I(pkcs8_key);
 
   shared_ptr<RSA_PrivateKey> priv_key;
-  priv_key = shared_dynamic_cast<RSA_PrivateKey>(pkcs8_key);
+  priv_key = dynamic_pointer_cast<RSA_PrivateKey>(pkcs8_key);
   E(priv_key, origin::no_fault,
     F("failed to extract RSA private key from PKCS#8 keypair"));
 
@@ -862,7 +862,7 @@ key_store::make_signature(database & db,
         L(FL("make_signature: building %d-byte pub key") % pub_block.size());
         shared_ptr<X509_PublicKey> x509_key =
           shared_ptr<X509_PublicKey>(Botan::X509::load_key(pub_block));
-        shared_ptr<RSA_PublicKey> pub_key = shared_dynamic_cast<RSA_PublicKey>(x509_key);
+        shared_ptr<RSA_PublicKey> pub_key = dynamic_pointer_cast<RSA_PublicKey>(x509_key);
 
         if (!pub_key)
           throw recoverable_failure(origin::system,
@@ -1065,7 +1065,7 @@ key_store_state::migrate_old_key_pair
         continue;
       }
 
-  priv_key = shared_dynamic_cast<RSA_PrivateKey>(pkcs8_key);
+  priv_key = dynamic_pointer_cast<RSA_PrivateKey>(pkcs8_key);
   I(priv_key);
 
   // now we can write out the new key
--- origsrc/monotone-1.0/src/ssh_agent.cc	2011-03-26 01:41:01.000000000 -0500
+++ src/monotone-1.0/src/ssh_agent.cc	2013-05-14 03:20:10.046429600 -0500
@@ -32,7 +32,7 @@ using std::string;
 using std::vector;
 
 using boost::shared_ptr;
-using boost::shared_dynamic_cast;
+using boost::dynamic_pointer_cast;
 
 using Botan::RSA_PublicKey;
 using Botan::RSA_PrivateKey;
@@ -391,7 +391,7 @@ ssh_agent::has_key(const keypair & key)
   L(FL("has_key: building %d-byte pub key") % pub_block.size());
   shared_ptr<X509_PublicKey> x509_key =
     shared_ptr<X509_PublicKey>(Botan::X509::load_key(pub_block));
-  shared_ptr<RSA_PublicKey> pub_key = shared_dynamic_cast<RSA_PublicKey>(x509_key);
+  shared_ptr<RSA_PublicKey> pub_key = dynamic_pointer_cast<RSA_PublicKey>(x509_key);
 
   if (!pub_key)
     throw recoverable_failure(origin::system,
